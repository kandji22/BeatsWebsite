{% extends 'base.html.twig' %}

{% block title %}Home{% endblock %}

{% block body %}
    <div class="app">
        <div class="songs-wrapper">
            <div class="row">
                {% set t = 1 %}
                {% for album in albums %}
                    <div class="col s12 m6 l4 x3">
                        <div class="active song">
                            <div
                                    class="song-image"
                                    style="
                      background-image: url(https://cbsradionews.files.wordpress.com/2016/02/death-of-a-bacherlor-album-art.jpg?w=555&h=548);
                    "
                            ></div>
                            <div class="song-info">
                                <div class="song-title">{{ album.title }}</div>
                                <div class="song-artist">{% if album.description | length > 80 %}
                                        {{ album.description | slice(0, 80) }}
                                        <button class="btn btn-primary">Lire la suite</button>
                                    {% else %}
                                        {{ album.description | raw  }}
                                    {% endif %}</div>

                            </div>
                            {% set audios = album.getInstrumentals %}

                            {% for audio in audios %}
                                <audio data-song = "my song" id="{{ "audio-player_"~ t }}" data-id="{{ "audio-player_"~ t }}" class="audio-player" preload="none" src="{{ asset('audio/'~ audio.getFichierAudio) }}" data-piste="{{ t }}" ></audio>
                                {% set t = t + 1 %}
                            {% endfor %}
                        </div>
                    </div>
            {% endfor %}

            </div>
        </div>
        <div class="music-player">
            <div class="progress-wrapper">
                <div class="progress-bar"></div>
            </div>
            <div class="times-row">
                <div class="start-time">0:00</div>
                <div class="current-song">Current Song</div>
                <div class="end-time"></div>
            </div>
            <div class="player-actions">
                <button class="action-button">
                    <i class="material-icons">skip_previous</i>
                </button>
                <button class="play-button">
                    <i class="material-icons">play_arrow</i>
                </button>
                <button class="action-button">
                    <i class="material-icons">skip_next</i>
                </button>
            </div>
        </div>


    </div>


{% endblock %}
{% block javascripts %}
{{ parent() }}
<script
        src="https://code.jquery.com/jquery-3.6.4.js"
        integrity="sha256-a9jBBRygX1Bh5lt8GZjXDzyOB+bWve9EiO7tROUtj/E="
        crossorigin="anonymous"
></script>
    <script
            src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.7.0/gsap.min.js"
            integrity="sha512-2fk3Q4NXPYAqIha0glLZ2nluueK43aNoxvijPf53+DgL7UW9mkN+uXc1aEmnZdkkZVvtJZltpRt+JqTWc3TS3Q=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"
    ></script>
<script>
    $(function(){

        let toggle = document.querySelector(".toggle");
        let body = document.querySelector("body");

        let tl = gsap.timeline();

        toggle.addEventListener("click", function () {
            if (body.classList.contains("open")) {
                //Fermer le menu.
                body.classList.remove("open");
                tl.to(".sep", {
                    duration: 0,
                    height: 0,
                });

                tl.to(".sep__icon", {
                    duration: 0,
                    opacity: 0,
                });
            } else {
                //Ouvrir le menu.
                body.classList.add("open");

                tl.to(".sep", {
                    duration: 0.75,
                    height: "100%",
                    delay: 0.5,
                });

                tl.to(".sep__icon", {
                    opacity: 1,
                    duration: 0.25,
                    delay: -0.5,
                });

                tl.from(
                    ".menu__left__inner__item",
                    {
                        y: 40,
                        opacity: 0,
                        stagger: 0.25,
                    },
                    "<-0.5"
                );

                tl.from(
                    ".menu__right__inner__item",
                    {
                        y: 40,
                        opacity: 0,
                        stagger: 0.25,
                    },
                    "<0.5"
                );
            }
        });
    })

    //média player
    $(document).ready(function() {
        var audioPlayer
        var tabPiste = {};
        var numeroAudio = 0 //initialisation
        var progressBar = $('.progress-bar');
        $('.song').on('click', function(){
            tabPiste = {}

            if(typeof audioPlayer != 'undefined') {
                audioPlayer.pause()
                audioPlayer.currentTime = 0
                progressBar.width(0 + '%');
                $('.play-button').html('<i class="material-icons">play_arrow</i>');
            }
            var audios = $(this).children('audio');
            audios.each(function(element) {
                console.log('doule')
                tabPiste[$(this).data('piste')] = $(this).data('id')
            })
            $.each(tabPiste,function (key,val){
                if(val == undefined) {
                    tabPiste.splice(key,1)
                }
            })

        //s'il existe des pistes
        if(tabPiste.length != 0) {

            // Trouver la clé la plus petite
            var minKey = Math.min.apply(null, Object.keys(tabPiste));
            console.log(tabPiste)
            console.log(minKey)
            // Récupérer l'élément audio
             audioPlayer = $('#' + tabPiste[minKey])[0];
            numeroAudio = minKey
            // Récupérer les éléments DOM nécessaires

            var startTime = $('.start-time');
            var endTime = $('.end-time');
            var playButton = $('.play-button');
            var prevButton = $('.player-actions .action-button:first');
            var nextButton = $('.player-actions .action-button:last');
            var currentSong = $('.current-song');
            var progressWrapper = $('.progress-wrapper');

            // Définir les valeurs initiales
            var isPlaying = false;
            var currentTime = 0;
            var duration = audioPlayer.duration;


            // Mise à jour de la barre de progression et du temps de lecture
            function updateProgress() {
                currentTime = audioPlayer.currentTime;
                duration = audioPlayer.duration;
                if (!isNaN(duration)) {
                    var percent = currentTime / duration * 100;
                    progressBar.width(percent + '%');
                    startTime.text(formatTime(currentTime));
                    endTime.text(formatTime(duration));
                }
                if(currentTime == duration) {
                    numeroAudio++
                    pause()
                    if( tabPiste.hasOwnProperty(numeroAudio)) {
                        audioPlayer = $('#'+tabPiste[numeroAudio])[0];
                        currentSong.empty()
                        currentSong.append('<span>'+$('#'+tabPiste[numeroAudio]).data('sound')+'</span>')
                        play()
                    }
                    else {
                        numeroAudio--
                        pause()
                    }

                }
            }

            // Formatage de la durée en minutes:secondes
            function formatTime(time) {
                var minutes = Math.floor(time / 60);
                var seconds = Math.floor(time % 60);
                return minutes + ':' + (seconds < 10 ? '0' : '') + seconds;
            }

            // Lecture de la musique
            function play() {
                audioPlayer.play();
                isPlaying = true;
                playButton.html('<i class="material-icons">pause</i>');
            }

            // Pause de la musique
            function pause() {
                audioPlayer.pause();
                isPlaying = false;
                playButton.html('<i class="material-icons">play_arrow</i>');
            }

            // Bouton play/pause
            playButton.on('click', function () {
                if (isPlaying) {
                    pause();
                } else {
                    play();
                }
            });

            // Bouton précédent
            prevButton.on('click', function () {
                console.log('ok')
                console.log(tabPiste)
                console.log(numeroAudio)
                numeroAudio--
                if(tabPiste.hasOwnProperty(numeroAudio)) {
                    pause()
                    audioPlayer = $('#'+tabPiste[numeroAudio])[0];
                    play()
                }
                else {
                    pause()
                    numeroAudio++
                    audioPlayer = $('#'+tabPiste[numeroAudio])[0];
                    play()
                }
            });
            var clicAutorise = true;
            // Bouton suivant
            nextButton.on('click', function () {

                if (clicAutorise) {
                    console.log(tabPiste)
                    console.log(numeroAudio)
                    clicAutorise = false
                    numeroAudio++
                    if (tabPiste.hasOwnProperty(numeroAudio)) {
                        pause()
                        audioPlayer = $('#' + tabPiste[numeroAudio])[0];
                        play()
                    } else {
                        pause()
                        numeroAudio--
                        audioPlayer = $('#' + tabPiste[numeroAudio])[0];
                        play()
                    }
                    // Empêcher le déclenchement de l'événement pendant l'intervalle spécifié
                    setTimeout(function() {
                        clicAutorise = true;
                    }, 5000);
                }
            });

            // Mettre à jour la barre de progression et le temps de lecture toutes les 500 millisecondes
            setInterval(updateProgress, 500);
            // Ramener la chanson au début lorsque l'utilisateur clique sur la barre de progression
            progressBar.on('click', function (e) {

                var pos = (e.pageX - $(this).offset().left) / $(this).width();
                audioPlayer.currentTime = pos * duration;
            });
            // Variables pour le déplacement de la barre de progression
            var isDragging = false;
            var startX = 0;
            var dragOffset = 0;

            // Fonction de démarrage du déplacement
            function startDrag(e) {
                isDragging = true;
                startX = e.pageX;
                dragOffset = startX - progressBar.offset().left;
            }

            // Fonction de déplacement de la barre de progression
            function drag(e) {
                if (isDragging) {
                    var pos = (e.pageX - progressBar.offset().left - dragOffset) / progressBar.width();
                    pos = Math.max(0, Math.min(1, pos)); // S'assurer que la position est entre 0 et 1
                    audioPlayer.currentTime = pos * duration;
                    updateProgress();
                }
            }

            // Fonction d'arrêt du déplacement
            function stopDrag() {
                isDragging = false;
            }

            // Événements pour le déplacement de la barre de progression
            progressBar.on('mousedown', startDrag);
            $(document).on('mousemove', drag);
            $(document).on('mouseup', stopDrag);

            // Déplacer la barre de progression au clic sur progress-wrapper si une chanson est sélectionnée
            progressWrapper.on('click', function (e) {
                if (isSongSelected() && !isNaN(duration)) {
                    var pos = (e.pageX - $(this).offset().left) / $(this).width();
                    audioPlayer.currentTime = pos * duration;
                    updateProgress();
                }
            });

            // Vérifier si une chanson est sélectionnée
            function isSongSelected() {
                return audioPlayer.src !== "";
            }
        }
    });
    })

    //---fin média player
</script>
{% endblock %}